package com.gmail.nossr50.dwarfartist.io;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.UnsupportedEncodingException;

import com.gmail.nossr50.dwarfartist.datatypes.TilesetColor;
import com.gmail.nossr50.dwarfartist.manager.TitleManager;

/**
 * @author nossr50
 *
 */
public class FileManager {
	private File file = null; //Keep track of the currently loaded file
	private int valuesLoaded = 0;
	
	/***
	 * Store file reference and attempt to read from file
	 */
	public void loadFile(File file, TitleManager tm) throws FileNotFoundException {
		this.file = file;
		if(isLoaded()) {
			readFile();
			tm.updateName();
		}
	}
	
	/***
	 * Scan the file for RGB values used by Dwarf Fortress
	 * Updating the TilesetColor ENUM whenever a valid value is found
	 */
	public void readFile() {
		valuesLoaded = 0; //Start count at zero
		for(TilesetColor color : TilesetColor.values()) {
			String line = null;
			BufferedReader reader = null;
			try {
				//int lineCount = 0;
				reader = new BufferedReader(new FileReader(file.toString()));
				while((line = reader.readLine()) != null) {
					//System.out.println(color.toString()+" ("+lineCount+"): "+line);
					if(line.length() >= color.getShortFilePrefixLength()) {
						if(color.isFilePrefix(line)) {
							switch(color.getFilePrefixColor(line)) {
							case 'R':
								color.setRedValue(Integer.valueOf(color.getColorValue(line)));
								valuesLoaded++;
								break;
							case 'G':
								color.setGreenValue(Integer.valueOf(color.getColorValue(line)));
								valuesLoaded++;
								break;
							case 'B':
								color.setBlueValue(Integer.valueOf(color.getColorValue(line)));
								valuesLoaded++;
								break;
							}
						}
					}
					
				}
					
			} catch (FileNotFoundException e1) {
				// TODO Auto-generated catch block
				e1.printStackTrace();
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
	}
	
	/***
	 * Write a new file with all of the formatted RGB values Dwarf Fortress needs
	 * @param tm
	 */
	public void saveFile(TitleManager tm) {
		PrintWriter writer;
		try {
			writer = new PrintWriter(file.toString(), "UTF-8");
			for(TilesetColor color : TilesetColor.values()) {
				writer.println(color.getFileFormattedRed());
				writer.println(color.getFileFormattedGreen());
				writer.println(color.getFileFormattedBlue());
			}
			
			writer.println("");
			writer.println("Generated by "+tm.getProgramTitle()); //Shameless plug
			writer.close();
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (UnsupportedEncodingException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
	}
	
	public String getFileName() {return file.toString();}
	
	public boolean isLoaded() {return file != null;}
	
	public int getValuesLoaded() {return valuesLoaded;}
	
	public int getExpectedValueCount() {return TilesetColor.values().length*3;}
	
	public int getMissingValueCount() {return getExpectedValueCount()-getValuesLoaded();}
}